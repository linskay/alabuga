package com.example.alabuga.service;

import com.example.alabuga.dto.NotificationCreateDTO;
import com.example.alabuga.dto.NotificationDTO;
import com.example.alabuga.dto.NotificationUpdateDTO;
import com.example.alabuga.entity.Notification;
import com.example.alabuga.entity.Rank;
import com.example.alabuga.entity.User;
import com.example.alabuga.exception.ResourceNotFoundException;
import com.example.alabuga.mapper.NotificationMapper;
import com.example.alabuga.repository.NotificationRepository;
import com.example.alabuga.repository.UserRepository;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
@RequiredArgsConstructor
public class NotificationService {

    private final NotificationRepository notificationRepository;
    private final UserRepository userRepository;
    private final NotificationMapper notificationMapper;
    private final ObjectMapper objectMapper;

    // ========== CRUD OPERATIONS ==========

    public List<NotificationDTO> getUserNotifications(Long userId) {
        List<Notification> notifications = notificationRepository.findUserNotificationsOrderedByDate(userId);
        return notificationMapper.toDTOList(notifications);
    }

    public List<NotificationDTO> getUnreadNotifications(Long userId) {
        List<Notification> notifications = notificationRepository.findByUserIdAndIsReadOrderByCreatedAtDesc(userId, false);
        return notificationMapper.toDTOList(notifications);
    }

    public NotificationDTO getNotificationById(Long id) {
        Notification notification = notificationRepository.findById(id)
                .orElseThrow(() -> new ResourceNotFoundException("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", id));
        return notificationMapper.toDTO(notification);
    }

    @Transactional
    public NotificationDTO createNotification(NotificationCreateDTO dto) {
        User user = userRepository.findById(dto.getUserId())
                .orElseThrow(() -> new ResourceNotFoundException("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", dto.getUserId()));

        Notification notification = notificationMapper.toEntity(dto);
        notification.setUser(user);

        Notification savedNotification = notificationRepository.save(notification);
        return notificationMapper.toDTO(savedNotification);
    }

    @Transactional
    public NotificationDTO updateNotification(Long id, NotificationUpdateDTO dto) {
        Notification notification = notificationRepository.findById(id)
                .orElseThrow(() -> new ResourceNotFoundException("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", id));

        notificationMapper.updateEntity(notification, dto);
        Notification savedNotification = notificationRepository.save(notification);
        return notificationMapper.toDTO(savedNotification);
    }

    @Transactional
    public void deleteNotification(Long id) {
        if (!notificationRepository.existsById(id)) {
            throw new ResourceNotFoundException("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", id);
        }
        notificationRepository.deleteById(id);
    }

    public Long getUnreadCount(Long userId) {
        return notificationRepository.countUnreadNotificationsByUserId(userId);
    }

    @Transactional
    public NotificationDTO markAsRead(Long id) {
        Notification notification = notificationRepository.findById(id)
                .orElseThrow(() -> new ResourceNotFoundException("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", id));
        notification.setIsRead(true);
        Notification savedNotification = notificationRepository.save(notification);
        return notificationMapper.toDTO(savedNotification);
    }

    @Transactional
    public void markAllAsRead(Long userId) {
        List<Notification> notifications = notificationRepository.findByUserIdAndIsReadOrderByCreatedAtDesc(userId, false);
        notifications.forEach(n -> n.setIsRead(true));
        notificationRepository.saveAll(notifications);
    }

    // ========== SYSTEM NOTIFICATIONS ==========

    @Transactional
    public void createRankAssignmentNotification(User user, Rank rank) {
        String title = "–°–ò–°–¢–ï–ú–ù–´–ô –ñ–£–†–ù–ê–õ: –ò–ù–ò–¶–ò–ê–¶–ò–Ø –ù–û–í–û–ì–û –ß–õ–ï–ù–ê –≠–ö–ò–ü–ê–ñ–ê";
        String content = generateRankAssignmentContent(rank);
        String metadata = createRankMetadata(rank);

        NotificationCreateDTO dto = NotificationCreateDTO.builder()
                .userId(user.getId())
                .title(title)
                .content(content)
                .notificationType(Notification.NotificationType.RANK_ASSIGNMENT.getCode())
                .metadata(metadata)
                .build();

        createNotification(dto);
    }

    @Transactional
    public void createRankPromotionNotification(User user, Rank oldRank, Rank newRank) {
        String title = "–°–ò–°–¢–ï–ú–ù–´–ô –ñ–£–†–ù–ê–õ: –ü–û–í–´–®–ï–ù–ò–ï –†–ê–ù–ì–ê";
        String content = generateRankPromotionContent(oldRank, newRank);
        String metadata = createRankPromotionMetadata(oldRank, newRank);

        NotificationCreateDTO dto = NotificationCreateDTO.builder()
                .userId(user.getId())
                .title(title)
                .content(content)
                .notificationType(Notification.NotificationType.RANK_PROMOTION.getCode())
                .metadata(metadata)
                .build();

        createNotification(dto);
    }

    @Transactional
    public void createMissionCompletedNotification(User user, String missionName, Integer experienceReward, Integer energyReward) {
        String title = "–°–ò–°–¢–ï–ú–ù–´–ô –ñ–£–†–ù–ê–õ: –ú–ò–°–°–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê";
        String content = generateMissionCompletedContent(missionName, experienceReward, energyReward);
        String metadata = createMissionMetadata(missionName, experienceReward, energyReward);

        NotificationCreateDTO dto = NotificationCreateDTO.builder()
                .userId(user.getId())
                .title(title)
                .content(content)
                .notificationType(Notification.NotificationType.MISSION_COMPLETED.getCode())
                .metadata(metadata)
                .build();

        createNotification(dto);
    }

    @Transactional
    public void createArtifactAcquiredNotification(User user, String artifactName, String artifactRarity) {
        String title = "–°–ò–°–¢–ï–ú–ù–´–ô –ñ–£–†–ù–ê–õ: –ê–†–¢–ï–§–ê–ö–¢ –ü–û–õ–£–ß–ï–ù";
        String content = generateArtifactAcquiredContent(artifactName, artifactRarity);
        String metadata = createArtifactMetadata(artifactName, artifactRarity);

        NotificationCreateDTO dto = NotificationCreateDTO.builder()
                .userId(user.getId())
                .title(title)
                .content(content)
                .notificationType(Notification.NotificationType.ARTIFACT_ACQUIRED.getCode())
                .metadata(metadata)
                .build();

        createNotification(dto);
    }

    @Transactional
    public void createShopPurchaseNotification(User user, String itemName, Integer price) {
        String title = "–°–ò–°–¢–ï–ú–ù–´–ô –ñ–£–†–ù–ê–õ: –ü–û–ö–£–ü–ö–ê –í –ù–ï–ö–°–£–°–ï";
        String content = generateShopPurchaseContent(itemName, price);
        String metadata = createShopPurchaseMetadata(itemName, price);

        NotificationCreateDTO dto = NotificationCreateDTO.builder()
                .userId(user.getId())
                .title(title)
                .content(content)
                .notificationType(Notification.NotificationType.SHOP_PURCHASE.getCode())
                .metadata(metadata)
                .build();

        createNotification(dto);
    }

    @Transactional
    public void createCardAcquiredNotification(User user, String cardName, String seriesName) {
        String title = "–°–ò–°–¢–ï–ú–ù–´–ô –ñ–£–†–ù–ê–õ: –ö–ê–†–¢–ê –ü–û–õ–£–ß–ï–ù–ê";
        String content = generateCardAcquiredContent(cardName, seriesName);
        String metadata = createCardMetadata(cardName, seriesName);

        NotificationCreateDTO dto = NotificationCreateDTO.builder()
                .userId(user.getId())
                .title(title)
                .content(content)
                .notificationType(Notification.NotificationType.CARD_ACQUIRED.getCode())
                .metadata(metadata)
                .build();

        createNotification(dto);
    }

    // ========== CONTENT GENERATORS ==========

    private String generateRankAssignmentContent(Rank rank) {
        if (rank.getLevel() == 0) {
            return """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 0: –°—Ç–∞—Ç—É—Å ¬´–ö–æ—Å–º–æ-–ö–∞–¥–µ—Ç¬ª
                    
                    // –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –ë–û–†–¢–û–í–û–ì–û –ò–ò //
                    –ó–ê–ì–†–£–ó–ö–ê –ü–†–û–¢–û–ö–û–õ–ê ¬´–°–¢–ê–†–¢¬ª...
                    –ê–∫—Ç–∏–≤–µ–Ω –Ω–æ–≤—ã–π —á–ª–µ–Ω —ç–∫–∏–ø–∞–∂–∞. –†–∞—Å–ø–æ–∑–Ω–∞–Ω —á–∏—Å—Ç—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –í–∞–º –ø—Ä–∏—Å–≤–æ–µ–Ω –±–∞–∑–æ–≤—ã–π —Ä–∞–Ω–≥ ¬´–ö–æ—Å–º–æ-–ö–∞–¥–µ—Ç¬ª.
                    –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –æ–±—â–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –§–ª–æ—Ç–∞. –ò–∑—É—á–∞–π—Ç–µ –æ—Å–Ω–æ–≤—ã, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –≤–≤–æ–¥–Ω—ã–µ –º–∏—Å—Å–∏–∏, —Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ –≤—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç–∏.
                    –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø—É—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
                    –£–¥–∞—á–∏, –ö–∞–¥–µ—Ç. –ü—É—Å—Ç—å –∑–≤–µ–∑–¥—ã —Å–≤–µ—Ç—è—Ç –≤–∞–º —è—Ä—á–µ.
                    """;
        }

        return generateRankSpecificContent(rank);
    }

    private String generateRankPromotionContent(Rank oldRank, Rank newRank) {
        return String.format("""
                        // –ü–û–í–´–®–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê //
                        –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º!
                        
                        –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–Ω–≥: %s (—É—Ä–æ–≤–µ–Ω—å %d)
                        –ù–æ–≤—ã–π —Ä–∞–Ω–≥: %s (—É—Ä–æ–≤–µ–Ω—å %d)
                        
                        %s
                        """,
                oldRank.getName(), oldRank.getLevel(),
                newRank.getName(), newRank.getLevel(),
                generateRankSpecificContent(newRank)
        );
    }

    private String generateMissionCompletedContent(String missionName, Integer experienceReward, Integer energyReward) {
        return String.format("""
                        // –û–ü–û–í–ï–©–ï–ù–ò–ï –°–õ–£–ñ–ë–´ –ú–ò–°–°–ò–ô //
                        –ú–∏—Å—Å–∏—è ¬´%s¬ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
                        
                        –ù–∞–≥—Ä–∞–¥—ã:
                        ‚Ä¢ –û–ø—ã—Ç: %d
                        ‚Ä¢ –≠–Ω–µ—Ä–≥–∏—è: %d
                        
                        –ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ –¥–æ–≤–æ–ª—å–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏.
                        """,
                missionName, experienceReward, energyReward
        );
    }

    private String generateArtifactAcquiredContent(String artifactName, String artifactRarity) {
        return String.format("""
                        // –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ê–†–¢–ï–§–ê–ö–¢–ê //
                        –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç!
                        
                        –ù–∞–∑–≤–∞–Ω–∏–µ: %s
                        –†–µ–¥–∫–æ—Å—Ç—å: %s
                        
                        –ê—Ä—Ç–µ—Ñ–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –∫–æ–ª–ª–µ–∫—Ü–∏—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ —Å–∏–ª—É —Å —É–º–æ–º.
                        """,
                artifactName, artifactRarity
        );
    }

    private String generateShopPurchaseContent(String itemName, Integer price) {
        return String.format("""
                        // –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø –ù–ï–ö–°–£–°–ê //
                        –ü–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!
                        
                        –¢–æ–≤–∞—Ä: %s
                        –°—Ç–æ–∏–º–æ—Å—Ç—å: %d –∫—Ä–µ–¥–∏—Ç–æ–≤
                        
                        –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ù–µ–∫—Å—É—Å.
                        """,
                itemName, price
        );
    }

    private String generateCardAcquiredContent(String cardName, String seriesName) {
        return String.format("""
                        // –ê–ö–¢–ò–í–ê–¶–ò–Ø –ö–ê–†–¢–´ //
                        –ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∞!
                        
                        –ù–∞–∑–≤–∞–Ω–∏–µ: %s
                        –°–µ—Ä–∏—è: %s
                        
                        –ö–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –≤ –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏.
                        """,
                cardName, seriesName
        );
    }

    private String generateRankSpecificContent(Rank rank) {
        return switch (rank.getLevel()) {
            case 1 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 1.1: –†–∞–Ω–≥ ¬´–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –¢—Ä–∞–µ–∫—Ç–æ—Ä–∏–π¬ª
                    
                    // –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò: –†–ê–°–ß–ï–¢ //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ù–∞–≤–∏–≥–∞—Ç–æ—Ä.
                    –í—ã –¥–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ –≤–∏–¥–∏—Ç–µ –≤—Å–µ–ª–µ–Ω–Ω—É—é –∫–∞–∫ —Å–∏—Å—Ç–µ–º—É –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. –í–∞—à —Ä–∞–∑—É–º ‚Äî —ç—Ç–æ –∂–∏–≤–æ–π –∫–æ–º–ø—å—é—Ç–µ—Ä, —Å–ø–æ—Å–æ–±–Ω—ã–π —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫—É—Ä—Å —Å–∫–≤–æ–∑—å –∞—Å—Ç–µ—Ä–æ–∏–¥–Ω–æ–µ –ø–æ–ª–µ —Ö–∞–æ—Å–∞.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–ù–∞–≤–∏–≥–∞—Ç–æ—Ä –¢—Ä–∞–µ–∫—Ç–æ—Ä–∏–π¬ª. –í—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö. –í–∞—à–∞ —Ü–µ–ª—å ‚Äî —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç–æ—á–Ω–æ—Å—Ç—å.
                    –ù–µ —Å–±–∏–≤–∞–π—Ç–µ—Å—å —Å –∫—É—Ä—Å–∞.
                    """;
            case 2 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 1.2: –†–∞–Ω–≥ ¬´–ê–Ω–∞–ª–∏—Ç–∏–∫ –û—Ä–±–∏—Ç¬ª
                    
                    // –ü–û–í–´–®–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê: –ì–õ–£–ë–ò–ù–ù–´–ô –ê–ù–ê–õ–ò–ó //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê–Ω–∞–ª–∏—Ç–∏–∫.
                    –í—ã –≤—ã—à–ª–∏ –∑–∞ —Ä–∞–º–∫–∏ –ø—Ä–æ—Å—Ç—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤. –¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞–µ—Ç–µ –∫—É—Ä—Å ‚Äî –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–∞–∫–æ–Ω—ã –¥–≤–∏–∂–µ–Ω–∏—è, —Å–ø—Ä–æ—Å –∏ –ø–æ—Ç–æ–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –§–ª–æ—Ç–∞.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–ê–Ω–∞–ª–∏—Ç–∏–∫ –û—Ä–±–∏—Ç¬ª. –í—ã –∏–∑—É—á–∞–µ—Ç–µ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏, –Ω–∞—Ö–æ–¥–∏—Ç–µ —Å–∫—Ä—ã—Ç—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏. –í—ã ‚Äî —Ç–æ—Ç, –∫—Ç–æ –ø—Ä–µ–¥–≤–∏–¥–∏—Ç –ø—Ä–æ–±–ª–µ–º—ã –¥–æ –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è.
                    –°–º–æ—Ç—Ä–∏—Ç–µ –≤ —Å—É—Ç—å.
                    """;
            case 3 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 1.3: –†–∞–Ω–≥ ¬´–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –°—Ç–∞–Ω—Ü–∏–∏¬ª
                    
                    // –ü–†–ò–ö–ê–ó –û –ü–û–í–´–®–ï–ù–ò–ò: –ö–û–ù–°–¢–†–£–ò–†–û–í–ê–ù–ò–ï //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä.
                    –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –≤–µ—Ä—à–∏–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞. –¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ ‚Äî –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ. –í—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, —Å–∏—Å—Ç–µ–º—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –æ–ø–æ—Ä–æ–π –¥–ª—è –≤—Å–µ–≥–æ –§–ª–æ—Ç–∞.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –°—Ç–∞–Ω—Ü–∏–∏¬ª. –í—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç–µ —Ö–∞–æ—Å –≤ –ø–æ—Ä—è–¥–æ–∫, –∞ –∏–¥–µ–∏ ‚Äî –≤ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã. –û—Ç –≤–∞—à–∏—Ö —á–µ—Ä—Ç–µ–∂–µ–π –∑–∞–≤–∏—Å–∏—Ç –±—É–¥—É—â–µ–µ –Ω–∞—à–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
                    –°—Ç—Ä–æ–π—Ç–µ –Ω–∞ –≤–µ–∫–∞.
                    """;
            case 4 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 2.1: –†–∞–Ω–≥ ¬´–•—Ä–æ–Ω–∏—Å—Ç –ì–∞–ª–∞–∫—Ç–∏–∫–∏¬ª
                    
                    // –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò: –ù–ê–°–õ–ï–î–ò–ï //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –•—Ä–æ–Ω–∏—Å—Ç.
                    –í—ã –ø–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ –≤–µ–ª–∏—á–∞–π—à–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –§–ª–æ—Ç–∞ ‚Äî –Ω–µ –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö, –∞ –≤ –∑–Ω–∞–Ω–∏—è—Ö –∏ –∏—Å—Ç–æ—Ä–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å–æ–±–∏—Ä–∞–µ–º. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å, —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –Ω–∞—à –æ–ø—ã—Ç.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–•—Ä–æ–Ω–∏—Å—Ç –ì–∞–ª–∞–∫—Ç–∏–∫–∏¬ª. –í—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç–µ —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—Ä—Ä–∞—Ç–∏–≤—ã, —Å–æ–∑–¥–∞–µ—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –ø–∏—à–µ—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—à–∏—Ö –ø–æ–±–µ–¥ –∏ —É—Ä–æ–∫–æ–≤.
                    –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø–∞–º—è—Ç—å.
                    """;
            case 5 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 2.2: –†–∞–Ω–≥ ¬´–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ö—É–ª—å—Ç—É—Ä¬ª
                    
                    // –ü–û–í–´–®–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê: –ü–û–ù–ò–ú–ê–ù–ò–ï //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å.
                    –í—ã –≤—ã—à–ª–∏ –∑–∞ —Ä–∞–º–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –í—ã –∏—â–µ—Ç–µ —Å–º—ã—Å–ª—ã. –í—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ —Ä—ã–Ω–∫–∏, —Ç—Ä–µ–Ω–¥—ã, "–∫—É–ª—å—Ç—É—Ä—ã" –æ—Ç–¥–µ–ª–æ–≤ –∏ –∫–æ–º–∞–Ω–¥, —á—Ç–æ–±—ã –Ω–∞—Ö–æ–¥–∏—Ç—å —Ç–æ—á–∫–∏ —Ä–æ—Å—Ç–∞ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ö—É–ª—å—Ç—É—Ä¬ª. –í—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ "–∞—Ä—Ö–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å–∫–æ–ø–∫–∏" –≤ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–µ –∏–¥–µ–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–≤–∏–≥–∞—é—Ç –§–ª–æ—Ç –≤–ø–µ—Ä–µ–¥.
                    –ò—â–∏—Ç–µ –∏—Å—Ç–∏–Ω—É.
                    """;
            case 6 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 2.3: –†–∞–Ω–≥ ¬´–ú–∞—Å—Ç–µ—Ä –õ–µ–∫—Ç–æ—Ä–∏—è¬ª
                    
                    // –ü–†–ò–ö–ê–ó –û –ü–û–í–´–®–ï–ù–ò–ò: –ü–ï–†–ï–î–ê–ß–ê –ó–ù–ê–ù–ò–ô //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ú–∞—Å—Ç–µ—Ä.
                    –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –≤–µ—Ä—à–∏–Ω—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞. –¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏–ª–∫–∞ –∑–Ω–∞–Ω–∏–π ‚Äî –≤—ã –∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫. –í–∞—à–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ–±—ä—è—Å–Ω—è—Ç—å —Å–ª–æ–∂–Ω–æ–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –±–µ—Å—Ü–µ–Ω–Ω–∞.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–ú–∞—Å—Ç–µ—Ä –õ–µ–∫—Ç–æ—Ä–∏—è¬ª. –í—ã –æ–±—É—á–∞–µ—Ç–µ –Ω–æ–≤—ã–µ –ø–æ–∫–æ–ª–µ–Ω–∏—è —ç–∫–∏–ø–∞–∂–∞, –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –±—Ä–∏—Ñ–∏–Ω–≥–∏, –¥–µ–ª–∏—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π. –í—ã ‚Äî –∂–∏–≤–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –§–ª–æ—Ç–∞.
                    –í–¥–æ—Ö–Ω–æ–≤–ª—è–π—Ç–µ –Ω–∞ –ø–æ–∑–Ω–∞–Ω–∏–µ.
                    """;
            case 7 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 3.1: –†–∞–Ω–≥ ¬´–°–≤—è–∑–∏—Å—Ç –ó–≤—ë–∑–¥–Ω–æ–≥–æ –§–ª–æ—Ç–∞¬ª
                    
                    // –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò: –°–í–Ø–ó–¨ //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –°–≤—è–∑–∏—Å—Ç.
                    –í—ã –¥–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ —è–≤–ª—è–µ—Ç–µ—Å—å –∫–ª—é—á–µ–≤—ã–º —É–∑–ª–æ–º –≤ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ –§–ª–æ—Ç–∞. –í—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç–µ —á–µ—Ç–∫—É—é –∏ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–¥–∞—á—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–µ–∂–¥—É –≤—Å–µ–º–∏ —á–ª–µ–Ω–∞–º–∏ —ç–∫–∏–ø–∞–∂–∞.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–°–≤—è–∑–∏—Å—Ç –ó–≤—ë–∑–¥–Ω–æ–≥–æ –§–ª–æ—Ç–∞¬ª. –í—ã –Ω–∞–ª–∞–∂–∏–≤–∞–µ—Ç–µ –º–æ—Å—Ç—ã –º–µ–∂–¥—É –ª—é–¥—å–º–∏ –∏ –æ—Ç–¥–µ–ª–∞–º–∏, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç–µ –ø–æ–º–µ—Ö–∏ –≤ –æ–±—â–µ–Ω–∏–∏. –í—ã ‚Äî –≥–ª–∞—Å –∫–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏—è –∏ —É—à–∏ –∫–æ–º–∞–Ω–¥—ã.
                    –î–µ—Ä–∂–∏—Ç–µ —Å–≤—è–∑—å –æ—Ç–∫—Ä—ã—Ç–æ–π.
                    """;
            case 8 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 3.2: –†–∞–Ω–≥ ¬´–®—Ç—É—Ä–º–∞–Ω –≠–∫–∏–ø–∞–∂–∞¬ª
                    
                    // –ü–û–í–´–®–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê: –ù–ê–í–ò–ì–ê–¶–ò–Ø //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –®—Ç—É—Ä–º–∞–Ω.
                    –í—ã –≤—ã—à–ª–∏ –∑–∞ —Ä–∞–º–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ä–µ—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä–∞. –¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é ‚Äî –≤—ã –≤–µ–¥–µ—Ç–µ –ø–æ –Ω–µ–π –ª—é–¥–µ–π. –í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –∫–æ–º–∞–Ω–¥–µ –ø–æ–Ω—è—Ç—å –æ–±—â—É—é —Ü–µ–ª—å –∏ –∏—Ö —Ä–æ–ª—å –≤ –º–∏—Å—Å–∏–∏.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–®—Ç—É—Ä–º–∞–Ω –≠–∫–∏–ø–∞–∂–∞¬ª. –í—ã –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è, –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç–µ, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ "–∫—É—Ä—Å–æ–º" –ø—Ä–æ–µ–∫—Ç–∞ –∏ –¥—É—Ö–æ–º –∫–æ–º–∞–Ω–¥—ã. –í—ã ‚Äî —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ª–∏–¥–µ—Ä.
                    –í–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∫ —Ü–µ–ª–∏.
                    """;
            case 9 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ 3.3: –†–∞–Ω–≥ ¬´–ö–æ–º–∞–Ω–¥–∏—Ä –û—Ç—Ä—è–¥–∞¬ª
                    
                    // –ü–†–ò–ö–ê–ó –û –ü–û–í–´–®–ï–ù–ò–ò: –ö–û–ú–ê–ù–î–û–í–ê–ù–ò–ï //
                    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ö–æ–º–∞–Ω–¥–∏—Ä.
                    –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –≤–µ—Ä—à–∏–Ω—ã –ª–∏–¥–µ—Ä—Å–∫–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞. –í—ã –±–µ—Ä–µ—Ç–µ –Ω–∞ —Å–µ–±—è –ø–æ–ª–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –º–∏—Å—Å–∏—é –∏ –ª—é–¥–µ–π. –í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Å–ª–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç–µ –¥—Ä—É–≥–∏—Ö –Ω–∞ —Å–≤–µ—Ä—à–µ–Ω–∏—è.
                    –í–∞—à–∞ –Ω–æ–≤–∞—è —Ä–æ–ª—å: ¬´–ö–æ–º–∞–Ω–¥–∏—Ä –û—Ç—Ä—è–¥–∞¬ª. –í—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ —Ä–µ—Å—É—Ä—Å—ã, –±–µ—Ä–µ—Ç–µ –Ω–∞ —Å–µ–±—è —Ä–æ–ª—å –∫–∞–ø–∏—Ç–∞–Ω–∞. –û—Ç –≤–∞—à–∏—Ö —Ä–µ—à–µ–Ω–∏–π –∑–∞–≤–∏—Å–∏—Ç —É—Å–ø–µ—Ö –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –§–ª–æ—Ç–∞.
                    –ù–µ—Å–∏—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.
                    """;
            case 10 -> """
                    üì® –°–æ–æ–±—â–µ–Ω–∏–µ –§–∏–Ω–∞–ª—å–Ω–æ–µ: –†–∞–Ω–≥ ¬´–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°—Ç–∞–Ω—Ü–∏–∏ ¬´–ê–ª–∞–±—É–≥–∞.TECH¬ª¬ª
                    
                    // –≠–ö–°–¢–†–ï–ù–ù–´–ô –®–ò–§–†–û-–ö–ê–ù–û–ù –° –í–ï–†–•–ù–ï–ì–û –ö–û–ú–ê–ù–î–û–í–ê–ù–ò–Ø //
                    ...–ó–ê–ì–†–£–ó–ö–ê –£–†–û–í–ù–Ø –î–û–°–¢–£–ü–ê "–û–ú–ï–ì–ê"...
                    –í–Ω–∏–º–∞–Ω–∏–µ, –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∏–∫.
                    –°–∏—Å—Ç–µ–º–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ. –í—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Å–≤–æ–∏–ª–∏ –æ–¥–Ω—É –≤–µ—Ç–≤—å ‚Äî –≤—ã —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–ª–∏ –≤ —Å–µ–±–µ —Å–∏–ª—É –≤—Å–µ—Ö —Ç—Ä–µ—Ö –≤–µ–∫—Ç–æ—Ä–æ–≤ –§–ª–æ—Ç–∞: –ª–æ–≥–∏–∫—É –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞, –º—É–¥—Ä–æ—Å—Ç—å –ú–∞—Å—Ç–µ—Ä–∞ –∏ –≤–æ–ª—é –ö–æ–º–∞–Ω–¥–∏—Ä–∞.
                    –¢–∞–∫–æ–π –±–∞–ª–∞–Ω—Å –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ä–∞–∑ –≤ –ø–æ–∫–æ–ª–µ–Ω–∏–µ. –í—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã –±–µ–∑ –∑–Ω–∞–Ω–∏–π, –∞ –∑–Ω–∞–Ω–∏—è –º–µ—Ä—Ç–≤—ã –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã, —Å–ø–æ—Å–æ–±–Ω–æ–π –∏—Ö –ø—Ä–∏–º–µ–Ω–∏—Ç—å.
                    –í–∞–º –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –≤—ã—Å—à–∏–π —Ä–∞–Ω–≥: ¬´–•—Ä–∞–Ω–∏—Ç–µ–ª—å –°—Ç–∞–Ω—Ü–∏–∏ ¬´–ê–ª–∞–±—É–≥–∞.TECH¬ª¬ª.
                    –í—ã ‚Äî –∂–∏–≤–æ–µ –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –Ω–∞—à–µ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏. –í–∞—à–∞ –º–∏—Å—Å–∏—è –æ—Ç–Ω—ã–Ω–µ ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ö—Ä—É–ø–∫–∏–π –±–∞–ª–∞–Ω—Å –≤—Å–µ–π –Ω–∞—à–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã, –±—ã—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º –µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è.
                    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –•—Ä–∞–Ω–∏—Ç–µ–ª—å. –ó–∞–π–º–∏—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ —è–¥—Ä–µ —Å–∏—Å—Ç–µ–º—ã.
                    """;
            default -> "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–Ω–≥: " + rank.getName();
        };
    }

    // ========== METADATA CREATORS ==========

    private String createRankMetadata(Rank rank) {
        try {
            return objectMapper.writeValueAsString(new RankMetadata(rank.getLevel(), rank.getName(), rank.getBranch().name()));
        } catch (JsonProcessingException e) {
            return "{\"rankLevel\": " + rank.getLevel() + ", \"rankName\": \"" + rank.getName() + "\"}";
        }
    }

    private String createRankPromotionMetadata(Rank oldRank, Rank newRank) {
        try {
            return objectMapper.writeValueAsString(new RankPromotionMetadata(
                    oldRank.getLevel(), oldRank.getName(),
                    newRank.getLevel(), newRank.getName()
            ));
        } catch (JsonProcessingException e) {
            return "{\"oldRank\": \"" + oldRank.getName() + "\", \"newRank\": \"" + newRank.getName() + "\"}";
        }
    }

    private String createMissionMetadata(String missionName, Integer experienceReward, Integer energyReward) {
        try {
            return objectMapper.writeValueAsString(new MissionMetadata(missionName, experienceReward, energyReward));
        } catch (JsonProcessingException e) {
            return "{\"missionName\": \"" + missionName + "\", \"experienceReward\": " + experienceReward + "}";
        }
    }

    private String createArtifactMetadata(String artifactName, String artifactRarity) {
        try {
            return objectMapper.writeValueAsString(new ArtifactMetadata(artifactName, artifactRarity));
        } catch (JsonProcessingException e) {
            return "{\"artifactName\": \"" + artifactName + "\", \"artifactRarity\": \"" + artifactRarity + "\"}";
        }
    }

    private String createShopPurchaseMetadata(String itemName, Integer price) {
        try {
            return objectMapper.writeValueAsString(new ShopPurchaseMetadata(itemName, price));
        } catch (JsonProcessingException e) {
            return "{\"itemName\": \"" + itemName + "\", \"price\": " + price + "}";
        }
    }

    private String createCardMetadata(String cardName, String seriesName) {
        try {
            return objectMapper.writeValueAsString(new CardMetadata(cardName, seriesName));
        } catch (JsonProcessingException e) {
            return "{\"cardName\": \"" + cardName + "\", \"seriesName\": \"" + seriesName + "\"}";
        }
    }

    // ========== PRIVATE RECORDS ==========

    private record RankMetadata(Integer rankLevel, String rankName, String branch) {
    }

    private record RankPromotionMetadata(Integer oldRankLevel, String oldRankName, Integer newRankLevel,
                                         String newRankName) {
    }

    private record MissionMetadata(String missionName, Integer experienceReward, Integer energyReward) {
    }

    private record ArtifactMetadata(String artifactName, String rarity) {
    }

    private record ShopPurchaseMetadata(String itemName, Integer price) {
    }

    private record CardMetadata(String cardName, String seriesName) {
    }
}
